
	/*******************************************
	 **                                       **
	 **     2012 臺大電機營 HUNGER GAME       **
	 **      　　   進階程式實驗 1            **
	 **                                       **
	 *******************************************/

/*
說明：
myBlockColor接收一個參數， "nowpos" ，代表玩家現在所處之位置。
另外提供兩個函式colorEdit與colorDefault，分別代表將某格(由參
數 pos決定之顏色編輯為有玩家通過時應顯示的顏色、或將顏色調為預
設值。若原本即為通過色/預設色，則呼叫此二函式將不做任何事。

現在，你應該要能將169格逐一「掃描」「比對」，使有玩家的那一格呈
現通過色，其餘格子均為預設色。

編按：
這段程式碼會在主程式中以60Hz的頻率執行來刷新遊戲地圖，所以你不
用擔心刷新間隔的問題。不過若出現錯誤，錯誤也會以60Hz的頻率出現XD	。
*/

function myBlockColor(nowpos){
	for (var i = 0; i < 169; i += 1) {
        if (i === nowpos) {
            colorEdit(grids[i]);
        } else {
			colorDefault(grids[i]);
        }
	}
	return;
}

function colorEdit(gridObj){
	gridObj.classList.add('active');
	return;
}
function colorDefault(gridObj){
	gridObj.classList.remove('active');
	return;
}

/*
	grids為儲存地圖的陣列
	其中，grids的排列方式對應到地圖實際上的位址如下:
	
[  0][  1][  2][  3][  4][  5][  6][  7][  8][  9][ 10][ 11][ 12] 
[ 13][ 14][ 15][ 16][ 17][ 18][ 19][ 20][ 21][ 22][ 23][ 24][ 25] 
[ 26][ 27][ 28][ 29][ 30][ 31][ 32][ 33][ 34][ 35][ 36][ 37][ 38] 
[ 39][ 40][ 41][ 42][ 43][ 44][ 45][ 46][ 47][ 48][ 49][ 50][ 51] 
[ 52][ 53][ 54][ 55][ 56][ 57][ 58][ 59][ 60][ 61][ 62][ 63][ 64] 
[ 65][ 66][ 67][ 68][ 69][ 70][ 71][ 72][ 73][ 74][ 75][ 76][ 77] 
[ 78][ 79][ 80][ 81][ 82][ 83][ 84][ 85][ 86][ 87][ 88][ 89][ 90] 
[ 91][ 92][ 93][ 94][ 95][ 96][ 97][ 98][ 99][100][101][102][103] 
[104][105][106][107][108][109][110][111][112][113][114][115][116] 
[117][118][119][120][121][122][123][124][125][126][127][128][129] 
[130][131][132][133][134][135][136][137][138][139][140][141][142] 
[143][144][145][146][147][148][149][150][151][152][153][154][155] 
[156][157][158][159][160][161][162][163][164][165][166][167][168] 
*/